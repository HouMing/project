[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Graduation Project of HouMing 1.0
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ cucgp ---
[debug] execute contextualize
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ cucgp ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.5:testResources (default-testResources) @ cucgp ---
[debug] execute contextualize
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ cucgp ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 12 source files to /home/houming/workspace/project/cucgp/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.10:test (default-test) @ cucgp ---
[INFO] Surefire report directory: /home/houming/workspace/project/cucgp/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running name.hm.test.unit.DepartmentUnitTest
[INFO ] name.hm.test.unit.DepartmentUnitTest.beforeTest(DepartmentUnitTest.java:41) 
start DepartmentUnitTest
[INFO ] name.hm.test.unit.DepartmentUnitTest.create(DepartmentUnitTest.java:65) 
insert OK!
{"departmentId":19,"departmentName":"测试系"}{"departmentId":20,"departmentName":"测试系1"}{"departmentId":21,"departmentName":"测试系2"}
[INFO ] name.hm.test.unit.DepartmentUnitTest.read(DepartmentUnitTest.java:86) 
selectAll OK!
[{"departmentId":19,"departmentName":"测试系"}, {"departmentId":20,"departmentName":"测试系1"}, {"departmentId":21,"departmentName":"测试系2"}]
[INFO ] name.hm.test.unit.DepartmentUnitTest.update(DepartmentUnitTest.java:105) 
before update
:[{"departmentId":19,"departmentName":"测试系"}, {"departmentId":20,"departmentName":"测试系1"}, {"departmentId":21,"departmentName":"测试系2"}]
[INFO ] name.hm.test.unit.DepartmentUnitTest.update(DepartmentUnitTest.java:123) 
update OK!
[{"departmentId":19,"departmentName":"测试系改"}, {"departmentId":20,"departmentName":"测试系"}, {"departmentId":21,"departmentName":"测试系1"}]
[INFO ] name.hm.test.unit.DepartmentUnitTest.delete(DepartmentUnitTest.java:149) 
delete OK!
[]
[INFO ] name.hm.test.unit.DepartmentUnitTest.afterTest(DepartmentUnitTest.java:48) 
finish DepartmentUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.739 sec
Running name.hm.test.unit.WorkflowUnitTest
[INFO ] name.hm.test.unit.WorkflowUnitTest.beforeTest(WorkflowUnitTest.java:44) 
start WorkflowUnitTest
[INFO ] name.hm.test.unit.WorkflowUnitTest.create(WorkflowUnitTest.java:70) 
create OK!
{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"valid"}
{"workflowId":8,"workflowName":"测试工作流1","workflowStatus":"valid"}
{"workflowId":9,"workflowName":"测试工作流2","workflowStatus":"invalid"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.read(WorkflowUnitTest.java:95) 
selectByWorkflowId OK!
{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"valid"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.read(WorkflowUnitTest.java:100) 
selectByWorkflowName OK!
{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"valid"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.read(WorkflowUnitTest.java:105) 
selectByWorkflowStatus OK!
[{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"valid"}, {"workflowId":8,"workflowName":"测试工作流1","workflowStatus":"valid"}]
[{"workflowId":9,"workflowName":"测试工作流2","workflowStatus":"invalid"}]
[INFO ] name.hm.test.unit.WorkflowUnitTest.update(WorkflowUnitTest.java:129) 
update OK!
{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"invalid"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.delete(WorkflowUnitTest.java:159) 
delete OK!
null
null
null
[INFO ] name.hm.test.unit.WorkflowUnitTest.afterTest(WorkflowUnitTest.java:50) 
finish WorkflowUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.303 sec
Running name.hm.test.unit.GroupUnitTest
[INFO ] name.hm.test.unit.GroupUnitTest.beforeTest(GroupUnitTest.java:47) 
start GroupUnitTest
[INFO ] name.hm.test.unit.GroupUnitTest.create(GroupUnitTest.java:70) 
insert OK!
{"groupId":25,"groupName":"测试组","valid":"valid"}
{"groupId":26,"groupName":"测试组1","valid":"valid"}
{"groupId":27,"groupName":"测试组2","valid":"invalid"}
[INFO ] name.hm.test.unit.GroupUnitTest.select(GroupUnitTest.java:96) 
selectByGroupId OK!
{"groupId":25,"groupName":"测试组","valid":"valid"}
[INFO ] name.hm.test.unit.GroupUnitTest.select(GroupUnitTest.java:101) 
selectByGroupName OK!
{"groupId":26,"groupName":"测试组1","valid":"valid"}
[INFO ] name.hm.test.unit.GroupUnitTest.select(GroupUnitTest.java:106) 
selectByValid OK!
[{"groupId":25,"groupName":"测试组","valid":"valid"}, {"groupId":26,"groupName":"测试组1","valid":"valid"}][{"groupId":27,"groupName":"测试组2","valid":"invalid"}]
[INFO ] name.hm.test.unit.GroupUnitTest.update(GroupUnitTest.java:125) 
before update
{"groupId":25,"groupName":"测试组","valid":"valid"}
[INFO ] name.hm.test.unit.GroupUnitTest.update(GroupUnitTest.java:132) 
update OK!
{"groupId":25,"groupName":"测试组改","valid":"valid"}
[INFO ] name.hm.test.unit.GroupUnitTest.delete(GroupUnitTest.java:160) 
delete OK!
{"groupId":25,"groupName":"测试组改","valid":"valid"}
[INFO ] name.hm.test.unit.GroupUnitTest.afterTest(GroupUnitTest.java:53) 
finish GroupUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.216 sec
Running name.hm.test.unit.ActionUnitTest
[INFO ] name.hm.test.unit.ActionUnitTest.beforeTest(ActionUnitTest.java:44) 
start ActionUnit test
[INFO ] name.hm.test.unit.RoleUnitTest.create(RoleUnitTest.java:74) 
create Role OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.create(WorkflowUnitTest.java:70) 
create OK!
{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"valid"}
{"workflowId":8,"workflowName":"测试工作流1","workflowStatus":"valid"}
{"workflowId":9,"workflowName":"测试工作流2","workflowStatus":"invalid"}
[INFO ] name.hm.test.unit.ActionUnitTest.create(ActionUnitTest.java:74) 
DDD 7 8 9
[INFO ] name.hm.test.unit.ActionUnitTest.create(ActionUnitTest.java:84) 
insert Action OK!
{"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
{"actionId":27,"actionName":"测试操作1","actionStatus":"valid","actionUrl":"/test/unit/","roleId":8,"workflowId":7}
{"actionId":28,"actionName":"测试操作2","actionStatus":"invalid","actionUrl":"/test/unit/","roleId":9,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.read(ActionUnitTest.java:108) 
selectByActionId OK!
{"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.read(ActionUnitTest.java:113) 
selectByActionName OK!
{"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.read(ActionUnitTest.java:118) 
selectByActionStatus OK!
[{"actionId":24,"actionName":"测试操作1","actionStatus":"valid","actionUrl":"/test/unit/"}, {"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}, {"actionId":27,"actionName":"测试操作1","actionStatus":"valid","actionUrl":"/test/unit/","roleId":8,"workflowId":7}]
[{"actionId":25,"actionName":"测试操作2","actionStatus":"invalid","actionUrl":"/test/unit/"}, {"actionId":28,"actionName":"测试操作2","actionStatus":"invalid","actionUrl":"/test/unit/","roleId":9,"workflowId":7}]
[INFO ] name.hm.test.unit.ActionUnitTest.update(ActionUnitTest.java:139) 
before update
{"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.update(ActionUnitTest.java:148) 
update OK!
{"actionId":26,"actionName":"测试操作改","actionStatus":"invalid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.delete(ActionUnitTest.java:166) 
before delete
{"actionId":26,"actionName":"测试操作改","actionStatus":"invalid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.delete(ActionUnitTest.java:169) 
delete OK!
[INFO ] name.hm.test.unit.ActionUnitTest.delete(ActionUnitTest.java:172) 
after delete
null
[INFO ] name.hm.test.unit.RoleUnitTest.delete(RoleUnitTest.java:160) 
before delete
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.delete(RoleUnitTest.java:166) 
delete OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.delete(WorkflowUnitTest.java:159) 
delete OK!
null
null
null
[INFO ] name.hm.test.unit.ActionUnitTest.afterTest(ActionUnitTest.java:59) 
finish ActionUnit test
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.526 sec
Running name.hm.test.unit.TeacherUnitTest
[INFO ] name.hm.test.unit.TeacherUnitTest.beforeTest(TeacherUnitTest.java:43) 
start TeacherUnitTest
[INFO ] name.hm.test.unit.DepartmentUnitTest.create(DepartmentUnitTest.java:65) 
insert OK!
{"departmentId":22,"departmentName":"测试系"}{"departmentId":23,"departmentName":"测试系1"}{"departmentId":24,"departmentName":"测试系2"}
[INFO ] name.hm.test.unit.TitleUnitTest.create(TitleUnitTest.java:56) 
insert Title OK!
{"titleId":19,"titleName":"测试职称"}{"titleId":20,"titleName":"测试职称1"}{"titleId":21,"titleName":"测试职称2"}
[INFO ] name.hm.test.unit.GroupUnitTest.create(GroupUnitTest.java:70) 
insert OK!
{"groupId":28,"groupName":"测试组","valid":"valid"}
{"groupId":29,"groupName":"测试组1","valid":"valid"}
{"groupId":30,"groupName":"测试组2","valid":"invalid"}
[INFO ] name.hm.test.unit.UserUnitTest.create(UserUnitTest.java:87) 
create OK!
{"groupId":28,"password":"123456","userHome":"/TestUser/","userId":19,"userName":"TestUser","valid":"valid"}{"groupId":28,"password":"123456","userHome":"/TestUser1/","userId":20,"userName":"TestUser1","valid":"valid"}{"groupId":28,"password":"123456","userHome":"/TestUser2/","userId":21,"userName":"TestUser2","valid":"valid"}
[INFO ] name.hm.test.unit.TeacherUnitTest.read(TeacherUnitTest.java:110) 
selectByUserName OK!
{"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser","weibo":"@testTeacher"}
[INFO ] name.hm.test.unit.TeacherUnitTest.read(TeacherUnitTest.java:115) 
selectByDepartmentName OK!
[{"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser","weibo":"@testTeacher"}, {"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser1","weibo":"@testTeacher"}, {"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser2","weibo":"@testTeacher"}]
[INFO ] name.hm.test.unit.TeacherUnitTest.read(TeacherUnitTest.java:120) 
selectByTitleName OK!
[{"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser","weibo":"@testTeacher"}, {"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser1","weibo":"@testTeacher"}, {"departmentName":"测试系","email":"10197786@qq.com","introduction":"测试介绍内容如下：。。。。","teacherName":"测试老师","telephone":"13461370223","titleName":"测试职称","userName":"TestUser2","weibo":"@testTeacher"}]
[INFO ] name.hm.test.unit.TeacherUnitTest.delete(TeacherUnitTest.java:168) 
delete OK!
nullnullnull
[INFO ] name.hm.test.unit.DepartmentUnitTest.delete(DepartmentUnitTest.java:149) 
delete OK!
[]
[INFO ] name.hm.test.unit.TitleUnitTest.delete(TitleUnitTest.java:123) 
before delete:
[{"titleId":19,"titleName":"测试职称"}, {"titleId":20,"titleName":"测试职称1"}, {"titleId":21,"titleName":"测试职称2"}]
[INFO ] name.hm.test.unit.TitleUnitTest.delete(TitleUnitTest.java:131) 
delete Title OK!
[]
[INFO ] name.hm.test.unit.UserUnitTest.delete(UserUnitTest.java:190) 
delete OK!
nullnullnull
[INFO ] name.hm.test.unit.GroupUnitTest.delete(GroupUnitTest.java:160) 
delete OK!
{"groupId":28,"groupName":"测试组","valid":"valid"}
[INFO ] name.hm.test.unit.TeacherUnitTest.afterTest(TeacherUnitTest.java:66) 
end TeacherUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.632 sec
Running name.hm.test.unit.TitleUnitTest
[INFO ] name.hm.test.unit.TitleUnitTest.beforeTest(TitleUnitTest.java:34) 
start TitleUnitTest
[INFO ] name.hm.test.unit.TitleUnitTest.create(TitleUnitTest.java:56) 
insert Title OK!
{"titleId":22,"titleName":"测试职称"}{"titleId":23,"titleName":"测试职称1"}{"titleId":24,"titleName":"测试职称2"}
[INFO ] name.hm.test.unit.TitleUnitTest.read(TitleUnitTest.java:77) 
selectAll OK!
[{"titleId":22,"titleName":"测试职称"}, {"titleId":23,"titleName":"测试职称1"}, {"titleId":24,"titleName":"测试职称2"}]
[INFO ] name.hm.test.unit.TitleUnitTest.update(TitleUnitTest.java:97) 
before update:
[{"titleId":22,"titleName":"测试职称"}, {"titleId":23,"titleName":"测试职称1"}, {"titleId":24,"titleName":"测试职称2"}]
[INFO ] name.hm.test.unit.TitleUnitTest.update(TitleUnitTest.java:104) 
update OK!
[{"titleId":22,"titleName":"测试职称改"}, {"titleId":23,"titleName":"测试职称1"}, {"titleId":24,"titleName":"测试职称2"}]
[INFO ] name.hm.test.unit.TitleUnitTest.delete(TitleUnitTest.java:123) 
before delete:
[{"titleId":22,"titleName":"测试职称改"}, {"titleId":23,"titleName":"测试职称1"}, {"titleId":24,"titleName":"测试职称2"}]
[INFO ] name.hm.test.unit.TitleUnitTest.delete(TitleUnitTest.java:131) 
delete Title OK!
[]
[INFO ] name.hm.test.unit.TitleUnitTest.afterTest(TitleUnitTest.java:40) 
finish TitleUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.156 sec
Running name.hm.test.unit.RoleUnitTest
[INFO ] name.hm.test.unit.RoleUnitTest.beforeTest(RoleUnitTest.java:47) 
start RoleUnitTest
[INFO ] name.hm.test.unit.RoleUnitTest.create(RoleUnitTest.java:74) 
create Role OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.read(RoleUnitTest.java:99) 
selectByRoleId OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
[INFO ] name.hm.test.unit.RoleUnitTest.read(RoleUnitTest.java:104) 
selectByRoleName OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
[INFO ] name.hm.test.unit.RoleUnitTest.read(RoleUnitTest.java:109) 
selectByValid OK!
[{"roleId":7,"roleName":"测试角色","valid":"valid"}, {"roleId":8,"roleName":"测试角色1","valid":"valid"}][{"roleId":9,"roleName":"测试角色2","valid":"invalid"}]
[INFO ] name.hm.test.unit.RoleUnitTest.update(RoleUnitTest.java:130) 
before update:
{"roleId":7,"roleName":"测试角色","valid":"valid"}
[INFO ] name.hm.test.unit.RoleUnitTest.update(RoleUnitTest.java:139) 
update OK!
{"roleId":7,"roleName":"测试角色改","valid":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.delete(RoleUnitTest.java:160) 
before delete
{"roleId":7,"roleName":"测试角色改","valid":"invalid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.delete(RoleUnitTest.java:166) 
delete OK!
{"roleId":7,"roleName":"测试角色改","valid":"invalid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.afterTest(RoleUnitTest.java:54) 
finish RoleUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.344 sec
Running name.hm.test.unit.UserUnitTest
[INFO ] name.hm.test.unit.UserUnitTest.beforeTest(UserUnitTest.java:58) 
start UserUnitTest
[INFO ] name.hm.test.unit.GroupUnitTest.create(GroupUnitTest.java:70) 
insert OK!
{"groupId":31,"groupName":"测试组","valid":"valid"}
{"groupId":32,"groupName":"测试组1","valid":"valid"}
{"groupId":33,"groupName":"测试组2","valid":"invalid"}
[INFO ] name.hm.test.unit.UserUnitTest.create(UserUnitTest.java:87) 
create OK!
{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUser","valid":"valid"}{"groupId":31,"password":"123456","userHome":"/TestUser1/","userId":23,"userName":"TestUser1","valid":"valid"}{"groupId":31,"password":"123456","userHome":"/TestUser2/","userId":24,"userName":"TestUser2","valid":"valid"}
[INFO ] name.hm.test.unit.UserUnitTest.read(UserUnitTest.java:114) 
selectByUserId OK!
{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUser","valid":"valid"}
[INFO ] name.hm.test.unit.UserUnitTest.read(UserUnitTest.java:120) 
selectByUserName OK!
{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUser","valid":"valid"}
[INFO ] name.hm.test.unit.UserUnitTest.read(UserUnitTest.java:126) 
selectByValid OK!
[{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUser","valid":"valid"}, {"groupId":31,"password":"123456","userHome":"/TestUser1/","userId":23,"userName":"TestUser1","valid":"valid"}, {"groupId":31,"password":"123456","userHome":"/TestUser2/","userId":24,"userName":"TestUser2","valid":"valid"}][]
[INFO ] name.hm.test.unit.UserUnitTest.read(UserUnitTest.java:132) 
selectByGroupId OK!
[{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUser","valid":"valid"}, {"groupId":31,"password":"123456","userHome":"/TestUser1/","userId":23,"userName":"TestUser1","valid":"valid"}, {"groupId":31,"password":"123456","userHome":"/TestUser2/","userId":24,"userName":"TestUser2","valid":"valid"}]
[INFO ] name.hm.test.unit.UserUnitTest.update(UserUnitTest.java:151) 
before update
{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUser","valid":"valid"}
[INFO ] name.hm.test.unit.UserUnitTest.update(UserUnitTest.java:158) 
update OK!
{"groupId":31,"password":"123456","userHome":"/TestUser/","userId":22,"userName":"TestUserC","valid":"valid"}
[INFO ] name.hm.test.unit.UserUnitTest.delete(UserUnitTest.java:190) 
delete OK!
nullnullnull
[INFO ] name.hm.test.unit.GroupUnitTest.delete(GroupUnitTest.java:160) 
delete OK!
{"groupId":31,"groupName":"测试组","valid":"valid"}
[INFO ] name.hm.test.unit.UserUnitTest.afterTest(UserUnitTest.java:68) 
finish UserUnitTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.376 sec
Running name.hm.test.integration.RoleIntegrationTest
[INFO ] name.hm.test.integration.RoleIntegrationTest.beforeTest(RoleIntegrationTest.java:41) 
start RoleIntegrationTest
[INFO ] name.hm.test.unit.TitleUnitTest.create(TitleUnitTest.java:56) 
insert Title OK!
{"titleId":25,"titleName":"测试职称"}{"titleId":26,"titleName":"测试职称1"}{"titleId":27,"titleName":"测试职称2"}
[INFO ] name.hm.test.unit.GroupUnitTest.create(GroupUnitTest.java:70) 
insert OK!
{"groupId":34,"groupName":"测试组","valid":"valid"}
{"groupId":35,"groupName":"测试组1","valid":"valid"}
{"groupId":36,"groupName":"测试组2","valid":"invalid"}
[INFO ] name.hm.test.unit.DepartmentUnitTest.create(DepartmentUnitTest.java:65) 
insert OK!
{"departmentId":25,"departmentName":"测试系"}{"departmentId":26,"departmentName":"测试系1"}{"departmentId":27,"departmentName":"测试系2"}
[INFO ] name.hm.test.unit.WorkflowUnitTest.create(WorkflowUnitTest.java:70) 
create OK!
{"workflowId":7,"workflowName":"测试工作流","workflowStatus":"valid"}
{"workflowId":8,"workflowName":"测试工作流1","workflowStatus":"valid"}
{"workflowId":9,"workflowName":"测试工作流2","workflowStatus":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.create(RoleUnitTest.java:74) 
create Role OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.ActionUnitTest.create(ActionUnitTest.java:74) 
DDD 7 8 9
[INFO ] name.hm.test.unit.ActionUnitTest.create(ActionUnitTest.java:84) 
insert Action OK!
{"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
{"actionId":27,"actionName":"测试操作1","actionStatus":"valid","actionUrl":"/test/unit/","roleId":8,"workflowId":7}
{"actionId":28,"actionName":"测试操作2","actionStatus":"invalid","actionUrl":"/test/unit/","roleId":9,"workflowId":7}
[INFO ] name.hm.test.unit.UserUnitTest.create(UserUnitTest.java:87) 
create OK!
{"groupId":34,"password":"123456","userHome":"/TestUser/","userId":25,"userName":"TestUser","valid":"valid"}{"groupId":34,"password":"123456","userHome":"/TestUser1/","userId":26,"userName":"TestUser1","valid":"valid"}{"groupId":34,"password":"123456","userHome":"/TestUser2/","userId":27,"userName":"TestUser2","valid":"valid"}
[INFO ] name.hm.test.integration.RoleIntegrationTest.afterTest(RoleIntegrationTest.java:72) 
start RoleIntegrationTest
[INFO ] name.hm.test.unit.ActionUnitTest.delete(ActionUnitTest.java:166) 
before delete
{"actionId":26,"actionName":"测试操作","actionStatus":"valid","actionUrl":"/test/unit/","roleId":7,"workflowId":7}
[INFO ] name.hm.test.unit.ActionUnitTest.delete(ActionUnitTest.java:169) 
delete OK!
[INFO ] name.hm.test.unit.ActionUnitTest.delete(ActionUnitTest.java:172) 
after delete
null
[INFO ] name.hm.test.unit.DepartmentUnitTest.delete(DepartmentUnitTest.java:149) 
delete OK!
[]
[INFO ] name.hm.test.unit.GroupUnitTest.delete(GroupUnitTest.java:160) 
delete OK!
{"groupId":34,"groupName":"测试组","valid":"valid"}
[INFO ] name.hm.test.unit.RoleUnitTest.delete(RoleUnitTest.java:160) 
before delete
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.RoleUnitTest.delete(RoleUnitTest.java:166) 
delete OK!
{"roleId":7,"roleName":"测试角色","valid":"valid"}
{"roleId":8,"roleName":"测试角色1","valid":"valid"}
{"roleId":9,"roleName":"测试角色2","valid":"invalid"}
[INFO ] name.hm.test.unit.TeacherUnitTest.delete(TeacherUnitTest.java:168) 
delete OK!
nullnullnull
[INFO ] name.hm.test.unit.TitleUnitTest.delete(TitleUnitTest.java:123) 
before delete:
[{"titleId":25,"titleName":"测试职称"}, {"titleId":26,"titleName":"测试职称1"}, {"titleId":27,"titleName":"测试职称2"}]
[INFO ] name.hm.test.unit.TitleUnitTest.delete(TitleUnitTest.java:131) 
delete Title OK!
[]
[INFO ] name.hm.test.unit.UserUnitTest.delete(UserUnitTest.java:190) 
delete OK!
nullnullnull
[INFO ] name.hm.test.unit.WorkflowUnitTest.delete(WorkflowUnitTest.java:159) 
delete OK!
null
null
null
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.003 sec

Results :

Tests run: 9, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 19.106s
[INFO] Finished at: Fri Mar 08 10:56:14 CST 2013
[INFO] Final Memory: 14M/117M
[INFO] ------------------------------------------------------------------------
