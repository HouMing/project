package name.hm.f;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import name.hm.m.Role;
import name.hm.m.User;

import org.apache.log4j.Logger;

public class AuthorizationFilter implements Filter
{
	static Logger logger = null;

	public void init(FilterConfig filterConfig) throws ServletException
	{
		logger = Logger.getLogger("cucgp");
	}

	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain chain) throws IOException, ServletException
	{
		HttpServletRequest req = (HttpServletRequest) request;
		HttpServletResponse resp = (HttpServletResponse) response;
		
		// js/css
		if (req.getRequestURI().matches("^(/resources/.*)$")) {
			chain.doFilter(request, response);
			return;
		}
		
		// login
		if (req.getRequestURI().matches("^/$")
				|| req.getRequestURI().matches("^(/login)$")) {
			chain.doFilter(request, response);
			return;
		}
		
		// loader
		if (req.getRequestURI().matches("^(/loader.*)$")) {
			HttpSession se = req.getSession();
			User user = (User) se.getAttribute("user");
			if (user == null) {
				resp.sendRedirect("login");
			} else {
				chain.doFilter(request, response);
			}
			return;
		}
		
		// teacher
		if (req.getRequestURI().matches("^(/teacher/.*)$")) {
			HttpSession se = req.getSession();
			User user = (User) se.getAttribute("user");
			ArrayList<Role> roles = (ArrayList<Role>) se.getAttribute("roles");
			for (Role role : roles) {
				if ( "教师".equals(role.getRoleName())) {
					chain.doFilter(request, response);
					return;
				}
			}
			resp.sendRedirect("error");
			return ;
		}
		// student
		if (req.getRequestURI().matches("^(/student/.*)$")) {
			HttpSession se = req.getSession();
			User user = (User) se.getAttribute("user");
			ArrayList<Role> roles = (ArrayList<Role>) se.getAttribute("roles");
			for (Role role : roles) {
				if ( "学生".equals(role.getRoleName())) {
					chain.doFilter(request, response);
					return;
				}
			}
			resp.sendRedirect("error");
			return ;
		}
		// admin
		if (req.getRequestURI().matches("^(/admin/.*)$")) {
			HttpSession se = req.getSession();
			User user = (User) se.getAttribute("user");
			ArrayList<Role> roles = (ArrayList<Role>) se.getAttribute("roles");
			for (Role role : roles) {
				if ( "admin".equals(role.getRoleName())) {
					chain.doFilter(request, response);
					return;
				}
			}
			resp.sendRedirect("error");
			return ;
		}
		
		return ;
	}

	public void destroy()
	{}
}
